{"version":3,"sources":["components/projectCard/ProjectContext.js","../node_modules/react-uuid/uuid.js","components/projectCard/ProjectDescription.js","components/projectCard/ImageView.js","components/projectCard/ProjectCard.js","assets/images/projects/frontEnd.webp","assets/images/projects/imageScraper.webp","assets/images/projects/expensify.webp","assets/images/projects/indecision.webp","assets/images/projects/jobSearch.webp","components/routes/portfolio/Portfolio.js"],"names":["ProjectContext","createContext","ProjectProvider","props","useState","modal","setModal","store","image","setImage","Provider","value","children","module","exports","hashTable","uuid","i","Math","floor","random","length","join","ProjectDescription","description","showLess","setShowLess","Fragment","slice","Button","classVal","handleBtnClick","icon","StyledImg","styled","div","ImageView","useContext","className","src","alt","data-original","onClick","e","target","StyledCard","theme","boxShadow","lightbaseColor","ProjectCard","projectName","projectDescription","projectImage","projectSkills","projectLink","map","skill","href","rel","ImageModal","lazy","StyledPortfolio","Portfolio","projects","imageScraper","expensify","indecision","frontend","jobSearch","project"],"mappings":"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","file":"static/js/6.57fa10ac.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\r\n\r\nexport const ProjectContext = createContext(null);\r\n\r\nexport const ProjectProvider = (props) => {\r\n    const [modal, setModal] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n\r\n    const store = {\r\n        modal,\r\n        setModal,\r\n        image,\r\n        setImage\r\n    }\r\n\r\n    return (\r\n        <ProjectContext.Provider value={store} >\r\n            {props.children}\r\n        </ProjectContext.Provider>\r\n    )\r\n}","/**\nA function that returns a universally unique identifier (uuid).  \nexample: 1b83fd69-abe7-468c-bea1-306a8aa1c81d\n@returns `string` : 32 character uuid (see example)\n*/\nfunction uuid() {\n  const hashTable = [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    '0',\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9'\n  ]\n  let uuid = []\n  for (let i = 0; i < 35; i++) {\n    if (i === 7 || i === 12 || i === 17 || i === 22) {\n      uuid[i] = '-'\n    } else {\n      uuid[i] = hashTable[Math.floor(Math.random() * hashTable.length - 1)]\n    }\n  }\n  return uuid.join('')\n}\n\nmodule.exports = uuid\n","import React, { useState } from 'react';\r\nimport Button from '../button/Button';\r\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa';\r\n\r\nconst ProjectDescription = ({ description, length = 75 }) => {\r\n    const [showLess, setShowLess] = useState(true);\r\n\r\n    if (description.length < length) {\r\n        return <p>{description}</p>;\r\n    }\r\n\r\n  \r\n    return (\r\n        <React.Fragment>\r\n            <p>{showLess ? `${description.slice(0, length)}...` : description}</p>\r\n            <Button\r\n                classVal={\"readMore\"}\r\n                handleBtnClick={() => setShowLess(!showLess)}\r\n                value={showLess ? \"Read More\" : \"Show Less\"}\r\n                icon={showLess ? <FaChevronDown /> : <FaChevronUp />}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ProjectDescription;","import React, {useContext} from 'react';\r\nimport styled from 'styled-components';\r\nimport { ProjectContext } from './ProjectContext';\r\n\r\nconst StyledImg = styled.div`\r\n    max-height: 200px;\r\n    overflow: hidden;\r\n    img{\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n        transition: all .3s ease-out;\r\n        cursor: pointer;\r\n        &:hover{\r\n            transform: scale(1.2)\r\n        }\r\n    }\r\n`\r\n\r\nconst ImageView = (props) => {\r\n    \r\n    const { setModal, setImage } = useContext(ProjectContext);\r\n\r\n    const openModal = (e) => {\r\n        setModal(\"open\");\r\n        setImage(e.target.src);\r\n    }\r\n    return (\r\n        <StyledImg className=\"img-container\">\r\n            <img\r\n                src={props.src}\r\n                alt={props.alt}\r\n                data-original=\"fullImg\"\r\n                onClick={openModal}\r\n            />\r\n        </StyledImg>\r\n    )\r\n};\r\n\r\nexport default ImageView;\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ProjectDescription from './ProjectDescription';\r\n\r\nimport ImageView from './ImageView';\r\nimport uuid from 'react-uuid';\r\n\r\nconst StyledCard = styled.div`\r\n    border-radius: 8px;\r\n    box-shadow: ${({ theme }) => theme.boxShadow};\r\n    padding: .7rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    h3,p{\r\n        margin-bottom:10px;\r\n    }\r\n    .btn.readMore{\r\n        margin-top: auto;\r\n        max-width: fit-content;\r\n    }\r\n    .codeLink{\r\n        margin: 10px 0;\r\n        text-decoration: underline;\r\n    }\r\n    .project-skills{\r\n        display:flex;\r\n        flex-wrap: wrap;\r\n        margin: 10px 0;\r\n        li{\r\n            border: 1px solid ${({ theme }) => theme.lightbaseColor};\r\n            border-radius: 1rem;\r\n            padding:3px 7px;\r\n            margin:5px 5px 0 0;\r\n        }\r\n    }\r\n`\r\n\r\nconst ProjectCard = ({projectName,projectDescription,projectImage,projectSkills,projectLink}) => (\r\n    <StyledCard className=\"project-card\">\r\n        <h3>{projectName}</h3>\r\n        <ImageView src={projectImage} alt={projectName} />\r\n        <ul className='project-skills'>\r\n            {projectSkills.map(skill => (\r\n                <li key={uuid()}>{skill}</li>\r\n            ))}\r\n        </ul>\r\n        <a className=\"codeLink\" href={projectLink} target=\"_blank\" rel=\"noreferrer\">Go to project.</a>\r\n        <ProjectDescription description={projectDescription}/>\r\n    </StyledCard>\r\n);\r\n\r\nexport default ProjectCard;\r\n\r\n","export default __webpack_public_path__ + \"static/media/frontEnd.2064b93e.webp\";","export default __webpack_public_path__ + \"static/media/imageScraper.6be93764.webp\";","export default __webpack_public_path__ + \"static/media/expensify.8bdf2c55.webp\";","export default __webpack_public_path__ + \"static/media/indecision.fed9946f.webp\";","export default __webpack_public_path__ + \"static/media/jobSearch.3a86d6b6.webp\";","import React, {lazy} from 'react';\r\nimport ProjectCard from '../../projectCard/ProjectCard';\r\nimport styled from 'styled-components';\r\nimport {ProjectProvider} from '../../projectCard/ProjectContext';\r\n\r\nimport frontend from '../../../assets/images/projects/frontEnd.webp';\r\nimport imageScraper from '../../../assets/images/projects/imageScraper.webp';\r\nimport expensify from '../../../assets/images/projects/expensify.webp';\r\nimport indecision from '../../../assets/images/projects/indecision.webp';\r\nimport jobSearch from '../../../assets/images/projects/jobSearch.webp';\r\n\r\nconst ImageModal = lazy(() => import('../../projectCard/ImageModal'));\r\n\r\n\r\nconst StyledPortfolio = styled.div`\r\n.projects-wrap {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  column-gap: 1rem;\r\n  row-gap: 3rem;\r\n  @media (max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n        row-gap: 3rem;\r\n    }\r\n}\r\n`\r\n\r\nconst Portfolio = () => {\r\n\r\n    const projects = [\r\n        {\r\n            projectName: 'Website image scraper',\r\n            projectDescription: 'A command line tool that will scrape all images from a given URL and create an HTML page displaying all the fetched images',\r\n            projectImage: imageScraper,\r\n            projectSkills: ['NodeJs', 'JavaScript', 'CSS', 'HTML'],\r\n            projectLink: 'https://github.com/Maximilianix/image-scrape'\r\n        },\r\n        {\r\n            projectName: 'React expensify app',\r\n            projectDescription: 'Expensify app practice project with ReactJs. Fully responsive App, add and remove expenses with description and dates for private use',\r\n            projectImage: expensify,\r\n            projectSkills: ['HTML', 'SCSS', 'ReactJs','Webpack', 'Express', 'Redux'],\r\n            projectLink: 'https://github.com/Maximilianix/react-course-expensify-app'\r\n        },\r\n        {\r\n            projectName: 'Indecision app',\r\n            projectDescription: 'React based application for storing tasks in browser\\'s local storage.',\r\n            projectImage: indecision,\r\n            projectSkills: ['HTML', 'SCSS', 'ReactJs','Webpack'],\r\n            projectLink: 'https://github.com/Maximilianix/indecision-app'\r\n        },\r\n        {\r\n            projectName: 'Front-end responsive page',\r\n            projectDescription: 'Fully responsive html css page',\r\n            projectImage: frontend,\r\n            projectSkills: ['HTML', 'CSS'],\r\n            projectLink: 'https://github.com/Maximilianix/FrontEnd-Responsoive-Page'\r\n        },\r\n        {\r\n            projectName: 'Job Search simple page',\r\n            projectDescription: 'Responsive front-end application with api connection to \"Adzuna\" with simple job searching engine.',\r\n            projectImage: jobSearch,\r\n            projectSkills: ['SCSS', 'HTML', 'JavaScript', 'Axios'],\r\n            projectLink: 'https://github.com/Maximilianix/Job-Search-simple-page'\r\n        },\r\n    ];\r\n    \r\n\r\n    return(\r\n        <StyledPortfolio className=\"portfolio\">\r\n            <h2>Projects</h2>\r\n            <ProjectProvider>\r\n                <div className=\"projects-wrap\">\r\n                {\r\n                    projects.map(project => (\r\n                        <ProjectCard\r\n                            key={project.projectName}\r\n                            projectName={project.projectName }\r\n                            projectDescription={project.projectDescription }\r\n                            projectImage={project.projectImage}\r\n                            projectSkills={project.projectSkills}\r\n                            projectLink={project.projectLink}\r\n                        />\r\n                    ))\r\n                }\r\n                <ImageModal />\r\n                </div>\r\n            </ProjectProvider>\r\n        </StyledPortfolio>\r\n    )\r\n};\r\n\r\nexport default Portfolio;"],"sourceRoot":""}